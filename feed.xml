<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://rebecca-123.github.io/rmr-tri3/feed.xml" rel="self" type="application/atom+xml" /><link href="https://rebecca-123.github.io/rmr-tri3/" rel="alternate" type="text/html" /><updated>2023-03-13T16:37:06-05:00</updated><id>https://rebecca-123.github.io/rmr-tri3/feed.xml</id><title type="html">RMR</title><subtitle>RMR Team Lesson Management</subtitle><entry><title type="html">RMR Plan for Tri 3 teaching and skit</title><link href="https://rebecca-123.github.io/rmr-tri3/2023/03/10/rmrplan.html" rel="alternate" type="text/html" title="RMR Plan for Tri 3 teaching and skit" /><published>2023-03-10T00:00:00-06:00</published><updated>2023-03-10T00:00:00-06:00</updated><id>https://rebecca-123.github.io/rmr-tri3/2023/03/10/rmrplan</id><author><name></name></author><summary type="html"><![CDATA[Big team with leads Madhumita, Rebecca, and Rohan]]></summary></entry><entry><title type="html">Curriculum Map David 2021 2022</title><link href="https://rebecca-123.github.io/rmr-tri3/2022/06/14/Curriculum-Map-David-2021-2022.html" rel="alternate" type="text/html" title="Curriculum Map David 2021 2022" /><published>2022-06-14T00:00:00-05:00</published><updated>2022-06-14T00:00:00-05:00</updated><id>https://rebecca-123.github.io/rmr-tri3/2022/06/14/Curriculum-Map-David--2021-2022</id><author><name></name></author><summary type="html"><![CDATA[PRIMITIVE TYPES Variables and Data Types Expressions and Assignment Statements Compound Assignment Operators Casting and Ranges of Variables Introduction to an Integrated Development Environment Introduction to an IDE Assignments may differ at teacher discretion Formative Entry/Exit Slip Assessments Participation Discussions Short Programming Exercises Quizzes CollegeBoard Unit 1 Progress Checks Summative Unit Test Project Call System class methods to generate output to the console. Create String literals. Identify the most appropriate data type category for a articular specification. Declare variables of the correct types to represent primitive data. Evaluate arithmetic expressions in a program code. Evaluate what is stored in a variable as a result of an expression with an assignment statement Evaluate what is stored in a variable as a result of an expression with an assignment statement. Evaluate arithmetic expressions that use casting. Create java projects in an Integrated Development Environment (Eclipse, VS Studio) SKILLS (Define at the bottom of the document): 1.A, 1.B, 2.B, 4.B, 5.A C4.1 C4.3 C4.4 C4.6 LS (11-12.1 to 11-12.6) RSIT (11-12.1 to 12.7) WS (11 - 12.1 to 12.6, 12.8, 12.9) A-CED (1-4) A-REI (1-2) F-IF (1-10) F-LE (5-6) C (5) G-CO (6-8, 12) G-GMD (1-3, 5) G-GPE (4-7) G-MG (1, 3) G-SRT (1-3) N-RN (1-2) N-Q (1-3) N-CN (4-6) N-VM (6-12) S-IC(1-6) S-ID(1-6) S-MD (1-7) APPS (10, 15, 16) USING OBJECTS Objects: Instances of Classes Creating and Storing Objects Calling methods String Objects and Literals String Methods Wrapper Classes: Integer, Double Using the Math Class Assignments may differ at teacher discretion Formative Entry/Exit Slip Assessments Participation Discussions Programming Exercises Drawing Lab Quizzes CollegeBoard Unit 2 Progress Checks Summative Unit Test Explain the relationship between a class and an object. Identify, using its signature, the correct constructor being called. Create objects by calling different constructors Define variables of the correct types to represent reference data. Call non-static void methods with or without parameters. Create String objects and use String class methods Be familiar with the use of the Integer and Double wrapper classes. Evaluate expressions that use the Math class methods. Evaluate Boolean expressions that use relational operators in program code. SKILLS: 1.B, 1.C, 2.A, 2.C, 3.A, 5.A C4.7 C4.8 LS (11-12.1 to 11-12.6) RSIT (11-12.1 to 12.7) WS (11 - 12.1 to 12.6, 12.8, 12.9) A-CED (1-4) A-REI (1-2) F-IF (1-10) F-LE (5-6) C (5) G-CO (6-8, 12) G-GMD (1-3, 5) G-GPE (4-7) G-MG (1, 3) G-SRT (1-3) N-RN (1-2) N-Q (1-3) N-CN (4-6) N-VM (6-12) S-IC(1-6) S-ID(1-6) S-MD (1-7) APPS (10, 15, 16) BOOLEAN EXPRESSIONS AND IF STATEMENTS Boolean Expressions if Statements and Control Flow if-else Statements else if Statements Compound Boolean Expressions Equivalent Boolean Expressions Comparing Objects Introduction to Graphic-User-Interface in java Assignments may differ at teacher discretion Formative Short Debugging Exercises Programming Exercises Introduction to GitHub for Eclipse Quizzes CollegeBoard Unit 3 Progress Checks Summative Pong - First GUI-Based Program Unit Test Represent branching logical processes by using conditional statements. Compare and contrast equivalent Boolean expressions. Compare object references using Boolean expressions in program code. Follow starter code for a GUI-based java project Write if-statements for keyboard input of a java program Use java drawing methods to draw shapes in java Complete a java program that uses a GUI for the simple game of Pong SKILLS: 2.A, 2.B, 3.A, 3.C, 4.A, 4.C C4.9 LS (11-12.1 to 11-12.6) RSIT (11-12.1 to 12.7) WS (11 - 12.1 to 12.6, 12.8, 12.9) A-CED (1-4) A-REI (1-2) F-IF (1-10) F-LE (5-6) C (5) G-CO (6-8, 12) G-GMD (1-3, 5) G-GPE (4-7) G-MG (1, 3) G-SRT (1-3) N-RN (1-2) N-Q (1-3) N-CN (4-6) N-VM (6-12) S-IC(1-6) S-ID(1-6) S-MD (1-7) APPS (10, 15, 16) ITERATION while Loops for Loops Developing Algorithms for Strings Nested Iteration Code Analysis Assignments may differ at teacher discretion Formative Entry/Exit Slip Assessments Participation Discussions Short Debugging Exercises Programming Exercises Quizzes CollegeBoard Unit 4 Progress Checks Summative Unit Test Represent iterative processes using a while or for loop. Identify, modify, and develop standard String-related algorithms Represent nested iterative processes Compute statement execution counts and informal run-time comparison of iterative statements. SKILLS: 1.B, 2.B, 2.D, 3.C, 4.C, 5.C C4.9 LS (11-12.1 to 11-12.6) RSIT (11-12.1 to 12.7) WS (11 - 12.1 to 12.6, 12.8, 12.9) A-CED (1-4) A-REI (1-2) F-IF (1-10) F-LE (5-6) C (5) G-CO (6-8, 12) G-GMD (1-3, 5) G-GPE (4-7) G-MG (1, 3) G-SRT (1-3) N-RN (1-2) N-Q (1-3) N-CN (4-6) N-VM (6-12) S-IC(1-6) S-ID(1-6) S-MD (1-7) APPS (10, 15, 16) WRITING CLASSES Anatomy of a Class Constructors Code Comments Accessor/Getter Methods Mutator/Setter Methods Writing Methods Static Variables and Methods Scope and Access this Keyword Assignments may differ at teacher discretion Formative Entry/Exit Slip Assessments Participation Discussions Short Debugging Exercises Programming Exercises Quizzes Introduction to AP-Level FRQs Style 1 - Methods and Control Structures Introduction to AP-Level FRQs Style 2 - Classes CollegeBoard Unit 5 Progress Checks Summative Unit Test DuckHunt Project Designate access and visibility constraints to classes, data, constructors, and methods. Designate private visibility of instance variables to encapsulate the attributes of an object. Define instance variables for the attributes to be initialized through the constructors of a class. Describe the functionality and use of program code through comments. Define behaviors of an object through non-void methods without parameters written in a class. Define behaviors of a class through static methods. Define the static variables that belong to the class. Explain where variables can be used in the program code. Evaluate object reference expressions that use the keyword this SKILLS: 1.A,1.B, 1.C, 2.C, 3.B, 4.B, 5.A, 5.B, 5.D C4.5 C4.8 C4.11 LS (11-12.1 to 11-12.6) RSIT (11-12.1 to 12.7) WS (11 - 12.1 to 12.6, 12.8, 12.9) A-CED (1-4) A-REI (1-2) F-IF (1-10) F-LE (5-6) C (5) G-CO (6-8, 12) G-GMD (1-3, 5) G-GPE (4-7) G-MG (1, 3) G-SRT (1-3) N-RN (1-2) N-Q (1-3) N-CN (4-6) N-VM (6-12) S-IC(1-6) S-ID(1-6) S-MD (1-7) APPS (10, 15, 16) ARRAY Creation and Access Traversing Arrays Enhanced for Loops for Arrays Reading, Modifying, and Developing Algorithms Using Arrays Assignments may differ at teacher discretion Formative Entry/Exit Slip Assessments Participation Discussions Debugging and Programming Exercises Quizzes CollegeBoard Unit 6 Progress Checks Summative Frogger / Agar.io Project Unit Test Represent collections of related primitive or object reference data using one dimensional (1D) array objects. Traverse the elements in a 1D array using a while, for, or enhanced for loop. Identify, modify and develop array traversals algorithms. Integrate 1D Arrays, Loops, and Objects into a GUI-Based java program. SKILLS: 1.C, 2.B, 4.B, 4.C, 5.D C4.7 LS (11-12.1 to 11-12.6) RSIT (11-12.1 to 12.7) WS (11 - 12.1 to 12.6, 12.8, 12.9) A-CED (1-4) A-REI (1-2) F-IF (1-10) F-LE (5-6) C (5) G-CO (6-8, 12) G-GMD (1-3, 5) G-GPE (4-7) G-MG (1, 3) G-SRT (1-3) N-RN (1-2) N-Q (1-3) N-CN (4-6) N-VM (6-12) S-IC(1-6) S-ID(1-6) S-MD (1-7) APPS (10, 15, 16) ARRAYLIST Introduction to ArrayList ArrayList Methods Traversing ArrayLists Reading, Modifying and Developing Algorithms Using ArrayList Searching - Sequential Sorting: Insertion, Selection Assignments may differ at teacher discretion Formative Entry/Exit Slip Assessments Participation Discussions Debugging &amp; Programming Exercises FRQ Practice (AP Prep) Quizzes Infection Simulation / Agar.io Clone Re-visited with ArrayList and dynamically adding objects into simulation CollegeBoard Unit 7 Progress Checks Summative Unit Test Represent collections of related object reference data using ArrayList objects. Traverse ArrayList objects using while, for, and enhanced loops. Identify, modify and develop algorithms involving traversals Apply sequential/linear search algorithms to search for specific information in an array or ArrayList of objects. Apply selection sort and insertion sort algorithms to sort the elements of an array or ArrayList objects. Compute statement execution counts and informal run-time comparison of sorting algorithms. SKILLS: 1.B, 2.C, 2.D, 5.C C4.7 C4.10 LS (11-12.1 to 11-12.6) RSIT (11-12.1 to 12.7) WS (11 - 12.1 to 12.6, 12.8, 12.9) A-CED (1-4) A-REI (1-2) F-IF (1-10) F-LE (5-6) C (5) G-CO (6-8, 12) G-GMD (1-3, 5) G-GPE (4-7) G-MG (1, 3) G-SRT (1-3) N-RN (1-2) N-Q (1-3) N-CN (4-6) N-VM (6-12) S-IC(1-6) S-ID(1-6) S-MD (1-7) APPS (10, 15, 16) 2D ARRAY Creation and Access Traversing 2D Arrays Reading, Modifying and Developing Algorithms using 2D Arrays Assignments may differ at teacher discretion Formative Entry/Exit Slip Assessments Participation Discussions Debugging &amp; Programming Exercises MagicSquares FRQ Practice (AP Prep) Quizzes CollegeBoard Unit 8 Progress Checks Picture Lab / 2048 Summative Unit Test Represent collections of related primitive or object reference data using two-dimensional (2D) array objects. Traverse 2D array objects using while, for, or enhanced for loops. Identify or modify algorithms requiring 2D array traversals Write program code to create, traverse, and manipulate elements in 2D array objects. SKILLS: 1.B, 1.C, 2.B, 2.D, 4.A, C4.7 LS (11-12.1 to 11-12.6) RSIT (11-12.1 to 12.7) WS (11 - 12.1 to 12.6, 12.8, 12.9) A-CED (1-4) A-REI (1-2) F-IF (1-10) F-LE (5-6) C (5) G-CO (6-8, 12) G-GMD (1-3, 5) G-GPE (4-7) G-MG (1, 3) G-SRT (1-3) N-RN (1-2) N-Q (1-3) N-CN (4-6) N-VM (6-12) S-IC(1-6) S-ID(1-6) S-MD (1-7) APPS (10, 15, 16) INHERITANCE Creating Superclasses and Subclasses Writing Constructors for Subclasses Formative Entry/Exit Slip Assessments Participation Discussions Programming Exercises Elevens Lab Quizzes CollegeBoard Unit 9 Progress Checks Summative Unit Test Create an inheritance relationship from a subclass to the superclass Define reference variables of a superclass to be assigned to an object of a subclass in the same hierarchy. Call methods in an inheritance relationship. Call Object class methods through inheritance. SKILLS: 1.A, 1.C, 3.A, 3.B, 5.A, 5.D C4.5 C4.8 LS (11-12.1 to 11-12.6) RSIT (11-12.1 to 12.7) WS (11 - 12.1 to 12.6, 12.8, 12.9) A-CED (1-4) A-REI (1-2) F-IF (1-10) F-LE (5-6) C (5) G-CO (6-8, 12) G-GMD (1-3, 5) G-GPE (4-7) G-MG (1, 3) G-SRT (1-3) N-RN (1-2) N-Q (1-3) N-CN (4-6) N-VM (6-12) S-IC(1-6) S-ID(1-6) S-MD (1-7) APPS (10, 15, 16) RECURSION Determining the result of recursive methods Writing simple recursive methods: Determining base cases and recursive calls Recursive Traversals on ArrayLists and Strings Recursive Searching Algorithm: Binary Search Recursive Sorting Algorithm: Merge Sort Assignments may differ at teacher discretion Formative Programming Exercises Fractal Drawing in Java - Recursvely Drawing Shapes Recursive Method Tracing Exercises Quizzes CollegeBoard Unit 10 Progress Checks Summative Unit Test Group Project Apply recursive search algorithms to information in String, 1D array, or ArrayList objects. Apply recursive algorithms to sort elements of an array or ArrayList objects. Determine the result of executing recursive methods. SKILLS: 1.B, 2.B, 2.D, 5.A, C4.9 C4.10 C5.3 C5.6 LS (11-12.1 to 11-12.6) RSIT (11-12.1 to 12.7) WS (11 - 12.1 to 12.6, 12.8, 12.9) A-CED (1-4) A-REI (1-2) F-IF (1-10) F-LE (5-6) C (5) G-CO (6-8, 12) G-GMD (1-3, 5) G-GPE (4-7) G-MG (1, 3) G-SRT (1-3) N-RN (1-2) N-Q (1-3) N-CN (4-6) N-VM (6-12) S-IC(1-6) S-MD (1-7) APPS (10, 15, 16) ETHICAL COMPUTING Ethical and Social Implications of Computing Systems Ethical Issues Around Data Collection Formative Discussions Explain the risks to privacy from collecting and storing personal data on computer systems. C8.3 C8.6 C8.8 C10.1 LS (11-12.1 to 11-12.6) A-CED (1-4) G-GPE (4-7) G-MG (1, 3) N-Q (1-3) N-CN (4-6) S-IC(1-6) S-MD (1-7)]]></summary></entry></feed>